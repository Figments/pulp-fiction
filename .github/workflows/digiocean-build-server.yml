name: Build Test Server (DO)

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
    paths:
    - 'nx.json'
    - 'package.json'
    - 'workspace.json'
    - 'libraries/models/**'
    - 'libraries/utilities/**'
    - 'packages/server/**'
  pull_request:
    branches: [ main ]
    paths:
    - 'nx.json'
    - 'package.json'
    - 'workspace.json'
    - 'libraries/models/**'
    - 'libraries/utilities/**'
    - 'packages/server/**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v1
        with:
          node-version: 15.5.1
           
      - name: Install global dependencies
        run: yarn global add @angular/cli @nestjs/cli nx typescript less
        
      - name: Install local dependencies
        run: yarn install
        
      - name: Build server
        run: yarn build:ci:server

      # Compress node_modules so it fits in GitHub storage. Exclude nx's .bin and .cache folders.
      - name: Compress node_modules
        run: |
          mkdir -p /opt/dragonfish/deploy-cache
          tar -czvf dist.tar.gz --exclude='node_modules/.bin' --exclude='node_modules/.cache' node_modules/ dist/packages/server/

      - name: Upload dist.tar.gz
        uses: actions/upload-artifact@v2
        with:
          name: dist.tar.gz
          path: dist.tar.gz