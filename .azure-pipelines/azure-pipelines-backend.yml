trigger:
  branches:
    include:
      - master
  paths:
    exclude: 
      - /frontend
      - /.azure-pipelines/azure-pipelines-frontend.yml

pool:
  vmImage: 'ubuntu-latest'

steps: 
  - task: NodeTool@0
    inputs:
      versionSpec: '12.17.0'
    displayName: 'Install Node.js 12.17.0'

  - script: |      
      yarn global add @nestjs/cli@7.1.5
      yarn global add typescript@3.8.3
    displayName: 'Install global tools'

  - script: |
      docker pull mongo:4.2
      docker run -p 27017:27017 --name pulp-fiction-mongo-db -d mongo:4.2
    displayName: 'Set up MongoDB'

  - script: |
      printf "%s\n" "DATABASE_URL=mongodb://localhost:27017/my_database" "JWT_SECRET=whatever" > .env
    displayName: 'Create .env file'

  - task: Cache@2
    inputs:
    # Note that the cache key is the hash of of yarn.lock. If the lockfile changes, the cache gets invalidated.
      key: 'yarn | "$(Agent.OS)" | $(Build.SourcesDirectory)/yarn.lock'
      path: '$(Build.SourcesDirectory)/node_modules'
      cacheHitVar: 'CacheRestored'
    displayName: "Cache node_modules"

  - script: yarn install
    displayName: "Yarn install"
    condition: ne(variables['CacheRestored'], 'true')

  - script: yarn build
    displayName: "Build"

  - script: yarn test
    displayName: "Test"
